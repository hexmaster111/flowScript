<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:NodeEditorDemo.ViewModels"
             xmlns:views="clr-namespace:NodeEditorDemo.Views"
             xmlns:editor="clr-namespace:NodeEditor.Controls;assembly=NodeEditorAvalonia"
             xmlns:app="clr-namespace:NodeEditorDemo"
             Name="MenuUserControl"
             mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="400"
             x:Class="NodeEditorDemo.Views.MenuView"
             x:CompileBindings="True" x:DataType="vm:MainViewViewModel">

  <Design.DataContext>
    <vm:MainViewViewModel />
  </Design.DataContext>

  <DockPanel VerticalAlignment="Top">

    <!-- Settings -->
    
    <Button Margin="0" 
            Padding="6,7,6,7" 
            Background="Transparent"
            CornerRadius="0"
            ToolTip.Tip="Settings"
            DockPanel.Dock="Right">
      <Button.Flyout>
        <Flyout ShowMode="TransientWithDismissOnPointerMoveAway" Placement="BottomEdgeAlignedRight">
          <editor:DrawingNodeProperties DataContext="{Binding Editor.Drawing, FallbackValue={x:Null}}"/>
        </Flyout>
      </Button.Flyout>
      <PathIcon Width="16" Height="16"
                Margin="6,0,6,0"
                Data="{DynamicResource SettingsIcon}" />
    </Button>

    <!-- Toggle -->
    
    <Button Margin="0" 
            Padding="6,7,6,7" 
            Background="Transparent"
            CornerRadius="0"
            Command="{Binding ToggleToolboxVisibleCommand}" 
            ToolTip.Tip="Toolbox"
            DockPanel.Dock="Left">
      <Viewbox DockPanel.Dock="Left" Width="16" >
        <PathIcon Data="M2.75254822,18 L21.2525482,18 C21.6667618,18 22.0025482,18.3357864 22.0025482,18.75 C22.0025482,19.1296958 21.7203943,19.443491 21.3543188,19.4931534 L21.2525482,19.5 L2.75254822,19.5 C2.33833466,19.5 2.00254822,19.1642136 2.00254822,18.75 C2.00254822,18.3703042 2.2847021,18.056509 2.65077766,18.0068466 L2.75254822,18 L21.2525482,18 L2.75254822,18 Z M2.75254822,11.5030063 L21.2525482,11.5030063 C21.6667618,11.5030063 22.0025482,11.8387927 22.0025482,12.2530063 C22.0025482,12.6327021 21.7203943,12.9464972 21.3543188,12.9961597 L21.2525482,13.0030063 L2.75254822,13.0030063 C2.33833466,13.0030063 2.00254822,12.6672199 2.00254822,12.2530063 C2.00254822,11.8733105 2.2847021,11.5595153 2.65077766,11.5098529 L2.75254822,11.5030063 L21.2525482,11.5030063 L2.75254822,11.5030063 Z M2.75168905,5.0032392 L21.251689,5.0032392 C21.6659026,5.0032392 22.001689,5.33902564 22.001689,5.7532392 C22.001689,6.13293497 21.7195352,6.44673016 21.3534596,6.49639258 L21.251689,6.5032392 L2.75168905,6.5032392 C2.33747549,6.5032392 2.00168905,6.16745276 2.00168905,5.7532392 C2.00168905,5.37354343 2.28384293,5.05974824 2.64991849,5.01008582 L2.75168905,5.0032392 L21.251689,5.0032392 L2.75168905,5.0032392 Z"/>
      </Viewbox>
    </Button>

    <!-- Menu -->
 
    <Menu IsVisible="{x:Static app:App.EnableMainMenu}">
      <!-- File -->
      <MenuItem Header="_File">
        <MenuItem Header="_New" 
                  Command="{Binding NewCommand}" 
                  InputGesture="{OnPlatform macOS=CMD+N, iOS=CMD+N, Default=Ctrl+N}">
          <MenuItem.Icon>
            <PathIcon Width="16" Height="16" Data="{DynamicResource NewIcon}" />
          </MenuItem.Icon>
        </MenuItem>
        <Separator IsVisible="{x:Static app:App.EnableInputOutput}"/>
        <MenuItem Header="_Open..."
                  Command="{Binding OpenCommand}" 
                  InputGesture="{OnPlatform macOS=CMD+O, iOS=CMD+O, Default=Ctrl+O}" 
                  IsVisible="{x:Static app:App.EnableInputOutput}">
          <MenuItem.Icon>
            <PathIcon Width="16" Height="16" Data="{DynamicResource OpenIcon}" />
          </MenuItem.Icon>
        </MenuItem>
        <Separator IsVisible="{x:Static app:App.EnableInputOutput}" />
        <MenuItem Header="_Save..." 
                  Command="{Binding SaveCommand}" 
                  InputGesture="{OnPlatform macOS=CMD+S, iOS=CMD+S, Default=Ctrl+S}"
                  IsVisible="{x:Static app:App.EnableInputOutput}">
          <MenuItem.Icon>
            <PathIcon Width="16" Height="16" Data="{DynamicResource SaveIcon}" />
          </MenuItem.Icon>
        </MenuItem>
        <Separator IsVisible="{x:Static app:App.EnableInputOutput}"/>
        <MenuItem Header="Export..." 
                  Command="{Binding ExportCommand}"
                  IsVisible="{x:Static app:App.EnableInputOutput}" />
        <Separator IsVisible="{x:Static app:App.EnableInputOutput}"/>
        <MenuItem Header="E_xit" 
                  Command="{Binding ExitCommand}" 
                  IsVisible="{x:Static app:App.EnableInputOutput}"/>
      </MenuItem>
      <!-- Edit -->
      <MenuItem Header="_Edit">
        <MenuItem Header="Cu_t" 
                  Command="{Binding Editor.Drawing.CutNodesCommand, FallbackValue={x:Null}}" 
                  InputGesture="{OnPlatform macOS=CMD+X, iOS=CMD+X, Default=Ctrl+X}">
          <MenuItem.Icon>
            <PathIcon Width="16" Height="16" Data="{DynamicResource CutIcon}" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="_Copy" 
                  Command="{Binding Editor.Drawing.CopyNodesCommand, FallbackValue={x:Null}}" 
                  InputGesture="{OnPlatform macOS=CMD+C, iOS=CMD+C, Default=Ctrl+C}">
          <MenuItem.Icon>
            <PathIcon Width="16" Height="16" Data="{DynamicResource CopyIcon}" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="_Paste" 
                  Command="{Binding Editor.Drawing.PasteNodesCommand, FallbackValue={x:Null}}"
                  InputGesture="{OnPlatform macOS=CMD+V, iOS=CMD+V, Default=Ctrl+V}">
          <MenuItem.Icon>
            <PathIcon Width="16" Height="16" Data="{DynamicResource PasteIcon}" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="D_uplicate" 
                  Command="{Binding Editor.Drawing.DuplicateNodesCommand, FallbackValue={x:Null}}" 
                  InputGesture="{OnPlatform macOS=CMD+D, iOS=CMD+D, Default=Ctrl+D}" />
        <Separator />
        <MenuItem Header="Select _All" 
                  Command="{Binding Editor.Drawing.SelectAllNodesCommand, FallbackValue={x:Null}}" 
                  InputGesture="{OnPlatform macOS=CMD+A, iOS=CMD+A, Default=Ctrl+A}" />
        <MenuItem Header="De_select All" 
                  Command="{Binding Editor.Drawing.DeselectAllNodesCommand, FallbackValue={x:Null}}" 
                  InputGesture="Escape" />
        <Separator />
        <MenuItem Header="_Delete" 
                  Command="{Binding Editor.Drawing.DeleteNodesCommand, FallbackValue={x:Null}}" 
                  InputGesture="Delete">
          <MenuItem.Icon>
            <PathIcon Width="16" Height="16" Data="{DynamicResource DeleteIcon}" />
          </MenuItem.Icon>
        </MenuItem>
      </MenuItem>
      <!-- Zoom -->
      <MenuItem Header="_Zoom" 
                x:DataType="views:MenuView" 
                x:CompileBindings="False">
        <MenuItem Header="_50%" 
                  Command="{Binding #MenuUserControl.ZoomControl.ZoomToCommand, FallbackValue={x:Null}}"
                  CommandParameter="0.5" />
        <MenuItem Header="_100%" 
                  Command="{Binding #MenuUserControl.ZoomControl.ResetZoomCommand, FallbackValue={x:Null}}"
                  InputGesture="{OnPlatform macOS=CMD+D0, iOS=CMD+D0, Default=Ctrl+D0}" />
        <MenuItem Header="_200%" 
                  Command="{Binding #MenuUserControl.ZoomControl.ZoomToCommand, FallbackValue={x:Null}}"
                  CommandParameter="2" />
        <Separator />
        <MenuItem Header="Zoom _In" 
                  Command="{Binding #MenuUserControl.ZoomControl.ZoomInCommand, FallbackValue={x:Null}}"
                  InputGesture="Add">
          <MenuItem.Icon>
            <PathIcon Width="16" Height="16" Data="{DynamicResource ZoomInIcon}" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Zoom _Out" 
                  Command="{Binding #MenuUserControl.ZoomControl.ZoomOutCommand, FallbackValue={x:Null}}"
                  InputGesture="Subtract">
          <MenuItem.Icon>
            <PathIcon Width="16" Height="16" Data="{DynamicResource ZoomOutIcon}" />
          </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Header="Fit Canvas" 
                  Command="{Binding #MenuUserControl.ZoomControl.FitCanvasCommand, FallbackValue={x:Null}}"
                  InputGesture="{OnPlatform macOS=CMD+D1, iOS=CMD+D1, Default=Ctrl+D1}" />
        <MenuItem Header="Fit to Fill" 
                  Command="{Binding #MenuUserControl.ZoomControl.FitToFillCommand, FallbackValue={x:Null}}"
                  InputGesture="{OnPlatform macOS=CMD+D2, iOS=CMD+D2, Default=Ctrl+D2}" />
        <MenuItem Header="Fill Canvas" 
                  Command="{Binding #MenuUserControl.ZoomControl.FillCanvasCommand, FallbackValue={x:Null}}"
                  InputGesture="{OnPlatform macOS=CMD+D3, iOS=CMD+D3, Default=Ctrl+D3}" />
      </MenuItem>
    </Menu>

  </DockPanel>

</UserControl>

